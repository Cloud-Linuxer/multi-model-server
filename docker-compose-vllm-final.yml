# vLLM 멀티모델 Docker Compose - 안정화 버전

services:
  # Qwen 2.5-3B Model (검증됨)
  qwen-model:
    image: vllm/vllm-openai:v0.6.3.post1
    container_name: vllm-qwen
    ports:
      - "8001:8000"
    command: [
      "--host", "0.0.0.0",
      "--model", "Qwen/Qwen2.5-3B-Instruct",
      "--served-model-name", "qwen25_3b",
      "--max-model-len", "2048",
      "--gpu-memory-utilization", "0.30",
      "--dtype", "auto",
      "--trust-remote-code",
      "--disable-custom-all-reduce"
    ]
    volumes:
      - ~/.cache/huggingface:/root/.cache/huggingface
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    networks:
      - vllm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # TinyLlama 1.1B Model (검증됨)
  tinyllama-model:
    image: vllm/vllm-openai:v0.6.3.post1
    container_name: vllm-tinyllama
    ports:
      - "8002:8000"
    command: [
      "--host", "0.0.0.0",
      "--model", "TinyLlama/TinyLlama-1.1B-Chat-v1.0",
      "--served-model-name", "tinyllama_1b",
      "--max-model-len", "2048",
      "--gpu-memory-utilization", "0.15",
      "--dtype", "auto",
      "--disable-custom-all-reduce"
    ]
    volumes:
      - ~/.cache/huggingface:/root/.cache/huggingface
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    networks:
      - vllm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Yi-6B Model (오픈 모델)
  yi-model:
    image: vllm/vllm-openai:v0.6.3.post1
    container_name: vllm-yi
    ports:
      - "8003:8000"
    command: [
      "--host", "0.0.0.0",
      "--model", "01-ai/Yi-6B-Chat",
      "--served-model-name", "yi_6b",
      "--max-model-len", "2048",
      "--gpu-memory-utilization", "0.25",
      "--dtype", "auto",
      "--disable-custom-all-reduce"
    ]
    volumes:
      - ~/.cache/huggingface:/root/.cache/huggingface
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    networks:
      - vllm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # 통합 API Gateway (Nginx)
  api-gateway:
    image: nginx:alpine
    container_name: vllm-gateway
    ports:
      - "8000:80"
    volumes:
      - ./configs/nginx-vllm-final.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - qwen-model
      - tinyllama-model
      - yi-model
    restart: unless-stopped
    networks:
      - vllm-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus 모니터링 (포트 충돌 해결)
  prometheus:
    image: prom/prometheus:latest
    container_name: vllm-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus-vllm.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    networks:
      - vllm-network

networks:
  vllm-network:
    driver: bridge

volumes:
  prometheus_data: