user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml application/atom+xml image/svg+xml
               text/x-js text/x-cross-domain-policy application/x-font-ttf
               application/x-font-opentype application/vnd.ms-fontobject
               image/x-icon;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=model_limit:10m rate=5r/s;

    # Upstream definitions for model servers
    upstream qwen_backend {
        least_conn;
        server qwen-model:8001 max_fails=3 fail_timeout=30s;
    }

    upstream llama_backend {
        least_conn;
        server llama-model:8002 max_fails=3 fail_timeout=30s;
    }

    upstream gemma_backend {
        least_conn;
        server gemma-model:8003 max_fails=3 fail_timeout=30s;
    }

    # Map for model routing
    map $request_uri $model_backend {
        ~*^/v1/models/qwen2p5_3b/     qwen_backend;
        ~*^/v1/models/llama32_3b/      llama_backend;
        ~*^/v1/models/gemma2_2b/       gemma_backend;
        default                         qwen_backend;
    }

    server {
        listen 80;
        server_name _;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Request body size limit (for large prompts)
        client_max_body_size 10M;
        client_body_buffer_size 1M;

        # Timeouts for long-running inference
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # Model listing endpoint
        location /v1/models {
            default_type application/json;
            return 200 '{
                "object": "list",
                "data": [
                    {"id": "qwen2p5_3b", "object": "model", "created": 1677649963, "owned_by": "Qwen"},
                    {"id": "llama32_3b", "object": "model", "created": 1677649963, "owned_by": "Meta"},
                    {"id": "gemma2_2b", "object": "model", "created": 1677649963, "owned_by": "Google"}
                ]
            }';
        }

        # Model-specific routing
        location ~* ^/v1/models/(qwen2p5_3b|llama32_3b|gemma2_2b)/(completions|chat/completions|embeddings) {
            limit_req zone=model_limit burst=5 nodelay;

            # Extract model name from URL
            set $model_name $1;

            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Proxy buffering settings
            proxy_buffering off;
            proxy_request_buffering off;

            # Route based on model
            if ($model_name = "qwen2p5_3b") {
                proxy_pass http://qwen_backend;
            }
            if ($model_name = "llama32_3b") {
                proxy_pass http://llama_backend;
            }
            if ($model_name = "gemma2_2b") {
                proxy_pass http://gemma_backend;
            }
        }

        # Generic completions endpoint (uses round-robin)
        location /v1/completions {
            limit_req zone=api_limit burst=10 nodelay;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_buffering off;
            proxy_request_buffering off;

            # Round-robin between all models
            proxy_pass http://$model_backend;
        }

        # Chat completions endpoint
        location /v1/chat/completions {
            limit_req zone=api_limit burst=10 nodelay;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_buffering off;
            proxy_request_buffering off;

            proxy_pass http://$model_backend;
        }

        # Metrics endpoint for Prometheus
        location /metrics {
            stub_status on;
            access_log off;
            allow 172.16.0.0/12;
            deny all;
        }

        # Default location
        location / {
            return 404 '{"error": "Not Found"}';
            add_header Content-Type application/json;
        }
    }
}