user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    # Upstream definitions for vLLM servers
    upstream qwen_backend {
        server qwen-model:8000;
    }

    upstream llama_backend {
        server llama-model:8000;
    }

    upstream gemma_backend {
        server gemma-model:8000;
    }

    # Map model names to backends
    map $request_uri $model_backend {
        ~*qwen25_3b    qwen_backend;
        ~*llama32_3b   llama_backend;
        ~*gemma2_2b    gemma_backend;
        default        qwen_backend;
    }

    server {
        listen 80;
        server_name _;

        # Request body size limit (for large prompts)
        client_max_body_size 10M;
        client_body_buffer_size 1M;

        # Timeouts for long-running inference
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # Model routing
        location /v1/models {
            default_type application/json;
            return 200 '{
                "object": "list",
                "data": [
                    {"id": "qwen25_3b", "object": "model", "owned_by": "Qwen"},
                    {"id": "llama32_3b", "object": "model", "owned_by": "Meta"},
                    {"id": "gemma2_2b", "object": "model", "owned_by": "Google"}
                ]
            }';
        }

        # Route to specific model based on request
        location ~ ^/v1/(completions|chat/completions|embeddings) {
            proxy_pass http://$model_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # Default location
        location / {
            proxy_pass http://qwen_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}